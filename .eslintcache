[{"/Users/briandinh/Code/valve-frontend/src/index.js":"1","/Users/briandinh/Code/valve-frontend/src/components/App.jsx":"2","/Users/briandinh/Code/valve-frontend/src/components/Header.jsx":"3","/Users/briandinh/Code/valve-frontend/src/components/ConfigForm.jsx":"4","/Users/briandinh/Code/valve-frontend/src/components/ConfigList.jsx":"5","/Users/briandinh/Code/valve-frontend/src/components/Footer.jsx":"6","/Users/briandinh/Code/valve-frontend/src/components/ErrorMessage.jsx":"7","/Users/briandinh/Code/valve-frontend/src/components/ConfigItem.jsx":"8","/Users/briandinh/Code/valve-frontend/src/components/EditForm.jsx":"9","/Users/briandinh/Code/valve-frontend/src/components/DeleteMsg.jsx":"10","/Users/briandinh/Code/valve-frontend/src/components/ButtonPanel.jsx":"11"},{"size":158,"mtime":1607575204369,"results":"12","hashOfConfig":"13"},{"size":301,"mtime":1607833052195,"results":"14","hashOfConfig":"13"},{"size":173,"mtime":1607843254352,"results":"15","hashOfConfig":"13"},{"size":2685,"mtime":1607832125596,"results":"16","hashOfConfig":"13"},{"size":1304,"mtime":1607831512389,"results":"17","hashOfConfig":"13"},{"size":198,"mtime":1607575273351,"results":"18","hashOfConfig":"13"},{"size":368,"mtime":1607381803920,"results":"19","hashOfConfig":"13"},{"size":1938,"mtime":1607381803920,"results":"20","hashOfConfig":"13"},{"size":2769,"mtime":1607381803920,"results":"21","hashOfConfig":"13"},{"size":481,"mtime":1607381803920,"results":"22","hashOfConfig":"13"},{"size":719,"mtime":1607842240904,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"7m7mek",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/briandinh/Code/valve-frontend/src/index.js",[],["50","51"],"/Users/briandinh/Code/valve-frontend/src/components/App.jsx",[],"/Users/briandinh/Code/valve-frontend/src/components/Header.jsx",[],"/Users/briandinh/Code/valve-frontend/src/components/ConfigForm.jsx",[],"/Users/briandinh/Code/valve-frontend/src/components/ConfigList.jsx",["52"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport FlipMove from \"react-flip-move\";\n\nimport ConfigItem from \"./ConfigItem\";\n\nfunction ConfigList() {\n\n  const [configurations, setConfigurations] = useState([]);\n\n  async function fetchData() {\n    const res = await fetch(\"/configs\");\n    res.json().then(res => setConfigurations(res));\n  }\n\n  useEffect(() => {\n    fetchData();\n  });\n\n// TODO fix flipmove\nfunction deleteConfig(id) {\n    console.log(\"Delete\");\n    axios.delete(\"/configs/\"+parseInt(id))\n      .then(res => {\n        console.log(res.data);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  function editConfig(config, id){\n    console.log(\"Edit\");\n    axios.put(\"/configs/\"+parseInt(id), config)\n      .then(res => {\n        if(res.data === \"Range Conflict\"){\n          alert(\"Range Conflict\");\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  return (\n    <div className=\"list\">\n      <h2>Configurations</h2>\n          {configurations.map(config =>\n            <ConfigItem\n              key = {config.config_id}\n              onEdit = {editConfig}\n              onDelete = {deleteConfig}\n              config = {config}\n            />\n          )}\n    </div>\n  )\n}\n\nexport default ConfigList;\n","/Users/briandinh/Code/valve-frontend/src/components/Footer.jsx",[],"/Users/briandinh/Code/valve-frontend/src/components/ErrorMessage.jsx",[],"/Users/briandinh/Code/valve-frontend/src/components/ConfigItem.jsx",["53"],"import { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport React, { useState, forwardRef } from \"react\";\nimport Modal from \"react-modal\";\n\nimport EditForm from \"./EditForm\";\nimport DeleteMsg from \"./DeleteMsg\";\n\nModal.setAppElement(\"#root\");\n\nfunction ConfigItem(props) {\n  library.add(faTrash);\n  library.add(faEdit);\n\n  const {config_id, key1, key2, minfloat, maxfloat, value} = props.config;\n\n  const [show, setState] = useState({\n    edit: 0,\n    del: 0\n  });\n\n  return (\n    <div className=\"listItem\" key={config_id}>\n      <p>\n        {key1}: {key2} ({minfloat} - {maxfloat}) {value}\n        <span>\n          <FontAwesomeIcon className=\"editIcon\" icon=\"edit\" onClick={() => setState({edit: config_id, del: 0})}/>\n        </span>\n        <span>\n          <FontAwesomeIcon className=\"trashIcon\" icon=\"trash\" onClick={() => setState({edit: 0, del: config_id})}/>\n        </span>\n     </p>\n     <Modal\n      isOpen={show.edit === config_id}\n      onRequestClose = {() => setState({edit: 0, del: 0})}\n      className=\"modal\"\n      >\n      <EditForm\n        onHide = {() => setState({edit: 0, del: 0})}\n        config = {props.config}\n        onSubmit = {function(config) {\n           setState({edit: 0, del: 0});\n           props.onEdit(config, config_id);\n         }}\n        />\n    </Modal>\n    <Modal\n      isOpen={show.del === config_id}\n      onRequestClose ={() => setState({edit: 0, del: 0})}\n      className=\"modal\"\n      >\n      <DeleteMsg\n      onHide = {() => setState({edit: 0, del: 0})}\n      config = {props.config}\n      onDelete = {function() {\n        console.log(config_id);\n        setState({edit: 0, del: 0});\n        props.onDelete(config_id);\n       }}\n      />\n    </Modal>\n  </div>\n  )\n}\n\nexport default ConfigItem;\n","/Users/briandinh/Code/valve-frontend/src/components/EditForm.jsx",["54"],"import React from \"react\";\nimport { useForm } from \"react-hook-form\";\n\nimport ErrorMessage from \"./ErrorMessage\";\n\nfunction EditForm(props) {\n  const key1s = window.Keys.key1s;\n  const key2s =  window.Keys.key2s;\n  const values = window.Keys.values;\n\n  const {config_id, key1, key2, minfloat, maxfloat, value} = props.config;\n\n  const {register, handleSubmit, errors, formState: { isSubmitting }} = useForm();\n\n  // TODO Refactor to only use one component instead of two\n  // TODO Calculate center and span using min/max float\n  function onSubmit(config) {\n    props.onSubmit(config);\n  }\n\n  return (\n   (\n      <form className= \"container modal\">\n        <h2>Edit Config</h2>\n\n        <div className= \"key1\">\n          <label>Key 1:</label>\n          <select defaultValue={key1} name=\"key1\" ref={register({ required: true })}>\n            <option value=\"\">Select...</option>\n              {key1s.map((option) => {\n                return (\n                <option key={option} value={option}>{option}</option>\n                );\n              })}\n          </select>\n          <ErrorMessage error={errors.key1} />\n        </div>\n\n        <div className=\"key2\">\n        <label>Key 2:</label>\n        <select defaultValue={key2} name=\"key2\"  ref={register({ required: true })}>\n          <option value=\"\">Select...</option>\n        {key2s.map((option) => {\n              return (\n                <option key={option} value={option}>{option}</option>\n              );\n        })}\n        </select>\n        <ErrorMessage error={errors.key2} />\n        </div>\n\n        <div className=\"key3\">\n        <label>Key 3:</label>\n        <input\n          name=\"minFloat\"\n          defaultValue={minfloat}\n          placeholder=\"Center\"\n          ref={register({ required: true, pattern: /^(\\d*\\.)?\\d+$/i })}\n        />\n        <ErrorMessage error={errors.minFloat} />\n\n\n        <input\n          name=\"maxFloat\"\n          defaultValue={maxfloat}\n          placeholder=\"Span\"\n          ref={register({ required: true, pattern: /^(\\d*\\.)?\\d+$/i })}\n        />\n        <ErrorMessage error={errors.maxFloat} />\n        </div>\n\n        <div className=\"value\">\n        <label>Value:</label>\n        <select defaultValue={value} name=\"value\" ref={register({ required: true })}>\n          <option value= \"\">Select...</option>\n        {values.map((option) => {\n              return (\n                <option key={option} value={option}>{option}</option>\n              );\n        })}\n        </select>\n        <ErrorMessage error={errors.value} />\n        </div>\n\n        <button disabled={isSubmitting} className=\"subButton\" onClick={handleSubmit(onSubmit)}>Edit Config</button>\n        <button onClick={props.onHide}>Close Form</button>\n       </form>\n     )\n  )\n}\n\nexport default EditForm;\n","/Users/briandinh/Code/valve-frontend/src/components/DeleteMsg.jsx",[],"/Users/briandinh/Code/valve-frontend/src/components/ButtonPanel.jsx",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":4,"column":8,"nodeType":"61","messageId":"62","endLine":4,"endColumn":16},{"ruleId":"59","severity":1,"message":"63","line":6,"column":27,"nodeType":"61","messageId":"62","endLine":6,"endColumn":37},{"ruleId":"59","severity":1,"message":"64","line":11,"column":10,"nodeType":"61","messageId":"62","endLine":11,"endColumn":19},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-unused-vars","'FlipMove' is defined but never used.","Identifier","unusedVar","'forwardRef' is defined but never used.","'config_id' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]